from gmplot import gmplot
import pandas as pd 

# column_names = ['timestamp', 'latitude', 'longitude', 'total_berries', 'total_rpc', 'rpc_drop']
# names=column_names

df = pd.read_csv('berry.csv', names=['timestamp', 'latitude', 'longitude', 'total_berries', 'total_rpc', 'rpc_drop', 'errorcode'])

# lat_float = pd.Series(df['latitude'], dtype='float')
# lon_float = pd.Series(df['longitude'], dtype='float')

# # Place map by taking the first value of the coordinates list, where the shift starts, and using it as the center of the google map

start_lat = df['latitude'].iloc[0]
start_lon = df['longitude'].iloc[0]

gmap = gmplot.GoogleMapPlotter(start_lat, start_lon, 15)

# Draw polygon by creating a blank list to be populated using a for loop scraping the CSV file.  

latplots = []
lonplots = []

for i in df['latitude']: 
	latplots.append(i)

for j in df['longitude']: 
	lonplots.append(j)

print latplots
print lonplots

gmap.plot(latplots, lonplots, 'cornflowerblue', edge_width=5)


# Scatter points of errors in the field, using error codes highlighted in the CSV 

error_latplots = [] 
error_lonplots = []

error_latitude = df.loc[df['errorcode']!=float(0), 'latitude']

print error_latitude


error_lats, error_lons = zip(*[
    (34.929866, -120.527966),
    (34.931612, -120.526897)
    ])
gmap.scatter(error_lats, error_lons, '#3B0B39', size=40, marker=False)

# Marker
parked_lat, parked_lon = 34.927907, -120.529693
gmap.marker(parked_lat, parked_lon, 'cornflowerblue')

# Draw
gmap.draw("my_berry_map_data.html")
